% vim: set fenc=utf8 syntax=logtalk :
:-	module('load_capacity_with_the_pull-out', []).
:-	encoding(utf8).


'сформировать параметры грунта для η'(GP):-
	(
		(
			good_object:getp('грунт засыпки', 'наименование', 'глинистый', string),
			good_object:getp('грунт засыпки', 'вид', GV, string),
			good_object:getp('грунт засыпки', 'J_L (показатель консистенции)', J_L, 'д.е.'),
			nonvar(GV), nonvar(J_L), !,
			GP = 'грунт'(['наименование'('глинистый'), 'вид'(GV), 'J_L (консистенция)'(J_L, 'д.е.')])
		);
		(
			good_object:getp('грунт засыпки', 'наименование', 'песчаный', string),
			good_object:getp('грунт засыпки', 'вид', PV, string),
			good_object:getp('грунт засыпки', 'степень влажности', SV, string),
			nonvar(PV), nonvar(SV), !,
			GP = 'грунт'(['наименование'('песчаный'), 'вид'(PV), 'степень влажности'(SV)])
		);
		throw(error(formal, context('load_capacity_with_the_pull-out:сформировать параметры грунта'/0, 'для данных исходных данных вызов завершился неудачей')))
	).

'сформировать параметры грунта для коэффициент безопасности по грунту'(GP):-
	(
		(
			good_object:getp('грунт засыпки', 'наименование', 'глинистый', string),
			good_object:getp('грунт засыпки', 'вид', GV, string),
			good_object:getp('грунт засыпки', 'J_L (показатель консистенции)', J_L, 'д.е.'),
			nonvar(GV), nonvar(J_L), !,
			GP = 'грунт'(['наименование'('глинистый'), 'вид'(GV), 'J_L (консистенция)'(J_L, 'д.е.')])
		);
		(
			good_object:getp('грунт засыпки', 'наименование', 'песчаный', string),
			GP = 'грунт'(['наименование'('песчаный')])
		);
		throw(error(formal, context('load_capacity_with_the_pull-out:сформировать параметры грунта'/0, 'для данных исходных данных вызов завершился неудачей')))
	).

	
'коэффициент безопасности по грунту'('наименование характеристики грунта'(NHG)):-
	Тип_расчета = 'расчет по несущей способности',
	'сформировать параметры грунта для коэффициент безопасности по грунту'(GP),
	R = result('коэффициент безопасности по грунту'(_К_г, 'д.е.')),
	BD = baseline_data([
		'тип расчета'(Тип_расчета),
		'наименование характеристики грунта'(NHG),
		GP
	]),
	Prefix = NHG,
	framework:ca(table:'6.01'(R, BD), Prefix),
	true.


'коэффициенты безопасности по грунту':-
	'коэффициент безопасности по грунту'('наименование характеристики грунта'('γ (объемный вес)')),
	'коэффициент безопасности по грунту'('наименование характеристики грунта'('φ (угол внутреннего трения)')),
	'коэффициент безопасности по грунту'('наименование характеристики грунта'('C (удельное сцепление)')).

%========================================================================================================================================================
'расчетные значения характеристик грунта':-
	good_object:getp('грунт засыпки', 'ρ_I (плотность)', Vρ_I_н, 'т/м^3'),
	good_object:getp('γ (объемный вес)', 'коэффициент безопасности по грунту', К_г_γ, 'д.е.'),
	Rγ = result('расчетное значение данной характеристики грунта'(_Vρ_I, 'т/м^3')),
	BDγ = baseline_data([
			'нормативное значение данной характеристики грунта'(Vρ_I_н, 'т/м^3'),
			'коэффициент безопасности по грунту'(К_г_γ, 'д.е.')
		]),
	Prefix_γ = 'грунт засыпки : ρ_I (плотность)',
	framework:ca(formula:'№6.01'(Rγ, BDγ), Prefix_γ),
	%-----------------------------------------------------------------------------------------------------
	good_object:getp('грунт засыпки', 'φ_I (угол внутреннего трения)', Vφ_I_н, 'град'),
	good_object:getp('φ (угол внутреннего трения)', 'коэффициент безопасности по грунту', К_г_φ, 'д.е.'),
	Rφ = result('расчетное значение данной характеристики грунта'(_Vφ_I, 'град')),
	BDφ = baseline_data([
			'нормативное значение данной характеристики грунта'(Vφ_I_н, 'град'),
			'коэффициент безопасности по грунту'(К_г_φ, 'д.е.')
		]),
	Prefix_φ = 'грунт засыпки : φ_I (угол внутреннего трения)',
	framework:ca(formula:'№6.01'(Rφ, BDφ), Prefix_φ),
	%-----------------------------------------------------------------------------------------------------
	good_object:getp('грунт засыпки', 'С_I (удельное сцепление)', С_I_н, 'кПа'),
	good_object:getp('C (удельное сцепление)', 'коэффициент безопасности по грунту', К_г_C, 'д.е.'),
	RC = result('расчетное значение данной характеристики грунта'(_С_I, 'кПа')),
	BDC = baseline_data([
			'нормативное значение данной характеристики грунта'(С_I_н, 'кПа'),
			'коэффициент безопасности по грунту'(К_г_C, 'д.е.')
		]),
	Prefix_C = 'грунт засыпки : С_I (удельное сцепление)',
	framework:ca(formula:'№6.01'(RC, BDC), Prefix_C),

 	true.

'расчетные значения характеристик грунта для грунта засыпки':-
	good_object:getp('грунт засыпки : φ_I (угол внутреннего трения)', 'расчетное значение данной характеристики грунта', Vφ_I, 'град'),
	Rφ = result('φ_з (расчетное значение угла внутреннего трения грунта засыпки)'(_Vφ_з, 'град')),
	BDφ = baseline_data([
			'φ_I_II (расчетное значение угла внутреннего трения грунта)'(Vφ_I, 'град')
		]),
	Prefix_φ = 'грунт засыпки',
	framework:ca(formula:'№6.02'(Rφ, BDφ), Prefix_φ),
	%------------------------------------------------------------------------------------------------------------------------------------------------
	good_object:getp('грунт засыпки : С_I (удельное сцепление)', 'расчетное значение данной характеристики грунта', С_I, 'кПа'),
	RC = result('C_з (расчетное значение удельного сцепления грунта засыпки)'(_C_з, 'кПа')),
	BDC = baseline_data([
			'C_I_II (расчетное значение удельного сцепления грунта)'(С_I, 'кПа')
		]),
	Prefix_C = 'грунт засыпки',
	framework:ca(formula:'№6.03'(RC, BDC), Prefix_C),
	%------------------------------------------------------------------------------------------------------------------------------------------------
	true.

η:-
	good_object:getp('грунт засыпки', 'ρ_I (плотность)', V_γ_н_з, 'т/м^3'),
	'сформировать параметры грунта для η'(GP),
	R = result('η (коэффициент согласно таблицы №6.11)'(_Кη, 'д.е.')),
	BD = baseline_data(['объемный вес грунта засыпки'(V_γ_н_з, 'тс/м^3'), GP]),
	Prefix = '',
	framework:ca(table:'6.11'(R, BD), Prefix), !,
	true.

'расчетные значения характеристик грунта для грунта засыпки с учетом коэффициента η':-
	η,
	good_object:getp('', 'η (коэффициент согласно таблицы №6.11)', Кη, 'д.е.'),

	good_object:getp('грунт засыпки : φ_I (угол внутреннего трения)', 'расчетное значение данной характеристики грунта', Vφ_I, 'град'),
	Rψ_о = result('ψ_о (расчетное значение угла внутреннего трения грунта засыпки)'(Vψ_о, 'град')),
	BDψ_о = baseline_data([
			'φ_I (расчетное значение угла внутреннего трения грунта)'(Vφ_I, 'град'),
			'η (коэффициент согласно таблицы №6.11)'(Кη, 'д.е.')
		]),

	Prefix_ψ_о = 'грунт засыпки : расчетное значение',
	framework:ca(formula:'№6.43'(Rψ_о, BDψ_о), Prefix_ψ_о),

	functions:grad2rad(Vψ_о, Vψ_о_rad),
	good_object:add(Prefix_ψ_о, 'ψ_о (расчетное значение угла внутреннего трения грунта засыпки)', Vψ_о_rad, 'рад'),
	%------------------------------------------------------------------------------------------------------------------------------------------------

	good_object:getp('грунт засыпки', 'φ_з (расчетное значение угла внутреннего трения грунта засыпки)', Vφ_з, 'град'),
	Rψ_оз = result('ψ_о (расчетное значение угла внутреннего трения грунта засыпки)'(Vψ_оз, 'град')),
	BDψ_оз = baseline_data([
			'φ_I (расчетное значение угла внутреннего трения грунта)'(Vφ_з, 'град'),
			'η (коэффициент согласно таблицы №6.11)'(Кη, 'д.е.')
		]),
	Prefix_ψ_оз = 'грунт засыпки : расчетное значение для грунта засыпки',
	framework:ca(formula:'№6.43'(Rψ_оз, BDψ_оз), Prefix_ψ_оз),
	functions:grad2rad(Vψ_оз, Vψ_оз_rad),
	good_object:add(Prefix_ψ_оз, 'ψ_о (расчетное значение угла внутреннего трения грунта засыпки)', Vψ_оз_rad, 'рад'),
	%================================================================================================================================================

	good_object:getp('грунт засыпки : С_I (удельное сцепление)', 'расчетное значение данной характеристики грунта', С_I, 'кПа'),
	RC_о = result('C_о (расчетное значение удельного сцепления грунта засыпки)'(_C_о, 'кПа')),
	BDC_о = baseline_data([
				'C_I (расчетное значение удельного сцепления грунта)'(С_I, 'кПа'),
				'η (коэффициент согласно таблицы №6.11)'(Кη, 'д.е.')
			]),
	Prefix_C_о = 'грунт засыпки : расчетное значение',
	framework:ca(formula:'№6.44'(RC_о, BDC_о), Prefix_C_о),


	good_object:getp('грунт засыпки', 'C_з (расчетное значение удельного сцепления грунта засыпки)', C_з, 'кПа'),
	RC_оз = result('C_о (расчетное значение удельного сцепления грунта засыпки)'(_C_оз, 'кПа')),
	BDC_оз = baseline_data([
				'C_I (расчетное значение удельного сцепления грунта)'(C_з, 'кПа'),
				'η (коэффициент согласно таблицы №6.11)'(Кη, 'д.е.')
			]),
	Prefix_C_оз = 'грунт засыпки : расчетное значение для грунта засыпки',
	framework:ca(formula:'№6.44'(RC_оз, BDC_оз), Prefix_C_оз),
	true.

'параметры обелиска'(Prefix):-
	good_object:getp(Prefix, 'ψ_о (расчетное значение угла внутреннего трения грунта засыпки)', Vψ_rad, 'рад'),
	good_object:getp(_, 'ширина основания при вырывании', ШОВ, 'м'),
	good_object:getp(_, 'длина основания при вырывании', ДОВ, 'м'),
	good_object:getp(_, 'глубина заложения', ГЗ, 'м'),
	A1 is ШОВ + 2 * ГЗ * tan(Vψ_rad),
	good_object:add(Prefix, 'A1 (ширина верхнего основания обелиска)', A1, 'м'),

	B1 is ДОВ + 2 * ГЗ * tan(Vψ_rad),
	good_object:add(Prefix, 'B1 (длина верхнего основания обелиска)', A1, 'м'),

	V is (ГЗ/6.0)* ( (2.0*A1+ШОВ)*B1  +   (2.0*B1+ДОВ)*A1 ),
	good_object:add(Prefix, 'V (объем обелиска)', V, 'м^3'),

	S is ГЗ  *  (A1 + B1 + ШОВ + ДОВ),
	good_object:add(Prefix, 'S (боковая поверхность обелиска)', S, 'м^2'),
	true.

'параметры обелиска':-
	'параметры обелиска'('грунт засыпки : расчетное значение'),
	'параметры обелиска'('грунт засыпки : расчетное значение для грунта засыпки'),
	true.

'коэффициент надежности':-
	good_object:getp('опора', 'вид', Species, string),
	R = result('коэффициент надежности'(_К_н, 'д.е.')),
	BD = baseline_data(['вид опоры'(Species)]),
	Prefix = 'опора',
	framework:ca(table:'6.10'(R, BD), Prefix),
	true.

w(X):- writeln(X).
'удерживающая сила за счет трения обелиска об окружающий грунт'(Prefix):-
	good_object:getp(Prefix, 'ψ_о (расчетное значение угла внутреннего трения грунта засыпки)', Vψ_rad, 'рад'),
	good_object:getp(Prefix, 'S (боковая поверхность обелиска)', S, 'м^2'),
	good_object:getp(Prefix, 'C_о (расчетное значение удельного сцепления грунта засыпки)', C_o, 'кПа'),
	N_тр is S * C_o * cos(Vψ_rad),
	good_object:add(Prefix, 'N_тр (удерживающая сила за счет трения обелиска об окружающий грунт)', N_тр, 'тс'),

	good_object:getp('опора', 'коэффициент надежности', К_н, 'д.е.'),
	N_тр_К_н is N_тр / К_н,
	good_object:add(Prefix, 'N_тр_К_н (удерживающая сила за счет трения обелиска об окружающий грунт с учетом К_н)', N_тр_К_н, 'тс'),
	true.

'удерживающая сила за счет трения обелиска об окружающий грунт':-
	'удерживающая сила за счет трения обелиска об окружающий грунт'('грунт засыпки : расчетное значение'),
	'удерживающая сила за счет трения обелиска об окружающий грунт'('грунт засыпки : расчетное значение для грунта засыпки'),
	true.

'удерживающая сила веса фундамента':-
	good_object:getp('опора', 'коэффициент надежности', К_н, 'д.е.'),
	good_object:getp('фундамент', 'вес элемента без подкладной плиты', Vg_ф, 'т'),


	good_object:getp('фундамент', 'объем железобетона', V_ф, 'м^3'),
	Vγ_ф is Vg_ф / V_ф,
	good_object:add('фундамент', 'γ_ф (обьемный вес материала фундамента)', Vγ_ф, 'тс/м^3'),
	R = result('γ_ф_в (обьемный вес тела фундамента, взвешенного водой)'(Vγ_ф_в, 'тс/м^3')),
	BD = baseline_data([
		'γ_ф (обьемный вес материала фундамента)'(Vγ_ф, 'тс/м^3')
	]),
	Prefix = 'фундамент',
	framework:ca(formula:'№6.05'(R, BD), Prefix),
	Vg_ф_в is Vγ_ф_в * V_ф,
	
	N_ф is 0.9 * Vg_ф,
	good_object:add('фундамент', 'N_ф (удерживающая сила веса фундамента без взвешивающего действия воды)', N_ф, 'тс'),
	N_ф_К_н is N_ф / К_н,
	good_object:add('фундамент', 'N_ф_К_н (удерживающая сила веса фундамента без взвешивающего действия воды с учетом К_н)', N_ф_К_н, 'тс'),

	N_ф_в is 0.9 * Vg_ф_в,
	N_ф_в_К_н is N_ф_в / К_н,
	(
		(
			good_object:getp('опора', 'взвешенность водой', 'да', string),
			good_object:add('фундамент', 'N_ф_в (удерживающая сила веса фундамента c взвешивающим действием воды (если есть))', N_ф_в, 'тс'),
			good_object:add('фундамент', 'N_ф_в_К_н (удерживающая сила веса фундамента c взвешивающим действием воды (если есть) с учетом К_н)', N_ф_в_К_н, 'тс')
		);
		(
			good_object:add('фундамент', 'N_ф_в (удерживающая сила веса фундамента c взвешивающим действием воды (если есть))', N_ф, 'тс'),
			good_object:add('фундамент', 'N_ф_К_н_в (удерживающая сила веса фундамента c взвешивающим действием воды (если есть) с учетом К_н)', N_ф_К_н, 'тс')
		)
	),
/*
	*/
	true.


'удерживающая сила веса грунта в объеме обелиска'(Prefix):-
	good_object:getp('опора', 'коэффициент надежности', К_н, 'д.е.'),
	good_object:getp(Prefix, 'V (объем обелиска)', V, 'м^3'),
	good_object:getp('фундамент', 'объем железобетона', V_ф, 'м^3'),
	V_гр is V - V_ф,
	good_object:add(Prefix, 'V_гр (объем грунта в обелиске за вычетом объема фундамента !без учета п.6.33!!!)', V_гр, 'м^3'),

	good_object:getp('грунт засыпки : ρ_I (плотность)', 'расчетное значение данной характеристики грунта', Vγ_S, 'т/м^3'),
	good_object:getp('грунт засыпки', 'e (коэффициент_пористости)', Ve, 'д.е.'),

	R = result('γ_взв (обьемный вес грунта с учетом взвешивающего действия воды)'(Vγ_взв, 'тс/м^3')),
	BD = baseline_data([
		'Vγ_S (обьемный вес грунта)'(Vγ_S, 'тс/м^3'),
		'e (коэффициент пористости грунта, природного сложения и влажности)'(Ve, 'д.е.')
	]),
	framework:ca(formula:'№6.04'(R, BD), Prefix),
	good_object:add('опора', 'γ_взв (обьемный вес грунта с учетом взвешивающего действия воды)', Vγ_взв, 'тс/м^3'),

	N_гр is V_гр * Vγ_S,
	good_object:add(Prefix, 'N_гр (удерживающая сила веса грунта в объеме обелиска без взвешивающего воздейстия воды)', N_гр, 'тс'),
	N_гр_К_н is N_гр / К_н,
	good_object:add(Prefix, 'N_гр_К_н (удерживающая сила веса грунта в объеме обелиска без взвешивающего воздейстия воды с учетом К_н)', N_гр_К_н, 'тс'),

	N_гр_взв is V_гр * Vγ_взв,
	good_object:add(Prefix, 'N_гр_взв (удерживающая сила веса грунта в объеме обелиска с учетом взвешивающего воздейстия воды)', N_гр_взв, 'тс'),
	N_гр_взв_К_н is N_гр_взв / К_н,
	good_object:add(Prefix, 'N_гр_взв_К_н (удерживающая сила веса грунта в объеме обелиска с учетом взвешивающего воздейстия воды с учетом К_н)', N_гр_взв_К_н, 'тс'),

	good_object:getp('опора', 'доля взвешенности водой', D, 'д.е.'),
	N_гр_взв_D is N_гр * (1.0 - D) + N_гр_взв * D,
	good_object:add(Prefix, 'N_гр_взв (удерживающая сила веса грунта в объеме обелиска с учетом взвешивающего воздейстия воды и доли взвешенного грунта)', N_гр_взв_D, 'тс'),
	N_гр_взв_D_К_н is N_гр_взв_D / К_н,
	good_object:add(Prefix, 'N_гр_взв (удерживающая сила веса грунта в объеме обелиска с учетом взвешивающего воздейстия воды и доли взвешенного грунта с учетом К_н)', N_гр_взв_D_К_н, 'тс'),

/*
	N_гр_155 is V_гр * 1.55,
	N_гр_155_К_н is N_гр_155 / К_н,
	add(Prefix, 'N_гр_155 (удерживающая сила веса грунта в объеме обелиска т.6.2 (ручное уплотнение) 1.55тс/м^3)', N_гр_155, 'тс'),
	add(Prefix, 'N_гр_155_К_н (удерживающая сила веса грунта в объеме обелиска т.6.2 (ручное уплотнение) 1.55тс/м^3 с учетом К_н)', N_гр_155_К_н, 'тс'),

	N_гр_100 is V_гр * 1.00,
	N_гр_100_К_н is N_гр_100 / К_н,
	add(Prefix, 'N_гр_100 (удерживающая сила веса грунта в объеме обелиска т.6.2 (ручное уплотнение, взвешенная глина) 1.00тс/м^3)', N_гр_100, 'тс'),
	add(Prefix, 'N_гр_100_К_н (удерживающая сила веса грунта в объеме обелиска т.6.2 (ручное уплотнение, взвешенная глина) 1.00тс/м^3 с учетом К_н)', N_гр_100_К_н, 'тс'),

	N_гр_080 is V_гр * 0.80,
	N_гр_080_К_н is N_гр_080 / К_н,
	add(Prefix, 'N_гр_080 (удерживающая сила веса грунта в объеме обелиска т.6.2 (ручное уплотнение, взвешенный песок) 0.80тс/м^3)', N_гр_080, 'тс'),
	add(Prefix, 'N_гр_080_К_н (удерживающая сила веса грунта в объеме обелиска т.6.2 (ручное уплотнение, взвешенный песок) 0.80тс/м^3 с учетом К_н)', N_гр_080_К_н, 'тс'),

	N_гр_17 is V_гр * 1.7,
	N_гр_17_К_н is N_гр_17 / К_н,
	add(Prefix, 'N_гр_17 (удерживающая сила веса грунта в объеме обелиска т.6.2 (механическое уплотнение) 1.7тс/м^3)', N_гр_17, 'тс'),
	add(Prefix, 'N_гр_17_К_н (удерживающая сила веса грунта в объеме обелиска т.6.2 (механическое уплотнение) 1.7тс/м^3 с учетом К_н)', N_гр_17_К_н, 'тс'),

	N_гр_110 is V_гр * 1.10,
	N_гр_110_К_н is N_гр_110 / К_н,
	add(Prefix, 'N_гр_110 (удерживающая сила веса грунта в объеме обелиска т.6.2 (механическое уплотнение, взвешенная глина) 1.10тс/м^3)', N_гр_110, 'тс'),
	add(Prefix, 'N_гр_110_К_н (удерживающая сила веса грунта в объеме обелиска т.6.2 (механическое уплотнение, взвешенная глина) 1.10тс/м^3 с учетом К_н)', N_гр_110_К_н, 'тс'),

	N_гр_090 is V_гр * 0.90,
	N_гр_090_К_н is N_гр_090 / К_н,
	add(Prefix, 'N_гр_090 (удерживающая сила веса грунта в объеме обелиска т.6.2 (механическое уплотнение, взвешенный песок) 0.90тс/м^3)', N_гр_090, 'тс'),
	add(Prefix, 'N_гр_090_К_н (удерживающая сила веса грунта в объеме обелиска т.6.2 (механическое уплотнение, взвешенный песок) 0.90тс/м^3 с учетом К_н)', N_гр_090_К_н, 'тс'),
*/
	true.

'удерживающая сила веса грунта в объеме обелиска':-
	'удерживающая сила веса грунта в объеме обелиска'('грунт засыпки : расчетное значение'),
	'удерживающая сила веса грунта в объеме обелиска'('грунт засыпки : расчетное значение для грунта засыпки').

'допустимая расчетная выдергивающая сила по несущей способности'(Prefix):-
	good_object:getp('опора', 'коэффициент надежности', К_н, 'д.е.'),
	good_object:getp(Prefix, 'N_тр (удерживающая сила за счет трения обелиска об окружающий грунт)', N_тр, 'тс'),
	good_object:getp(Prefix, 'N_гр (удерживающая сила веса грунта в объеме обелиска без взвешивающего воздейстия воды)', N_гр, 'тс'),
	good_object:getp('фундамент', 'N_ф_в (удерживающая сила веса фундамента c взвешивающим действием воды (если есть))', N_ф_в, 'тс'),
	N is N_тр + N_гр + N_ф_в,
	good_object:add(Prefix, 'N (допустимая расчетная выдергивающая сила по несущей способности)', N, 'тс'),
	N_К_н is N / К_н,
	good_object:add(Prefix, 'N_К_н (допустимая расчетная выдергивающая сила по несущей способности с учетом К_н)', N_К_н, 'тс').

'допустимая расчетная выдергивающая сила по несущей способности':-
	'допустимая расчетная выдергивающая сила по несущей способности'('грунт засыпки : расчетное значение'),
	'допустимая расчетная выдергивающая сила по несущей способности'('грунт засыпки : расчетное значение для грунта засыпки').

'расчет допустимой выдергивающей нагрузки по несущей способности':-
	good_object:add('', '===========================================================================================================', '', string),
	good_object:add('', '==========            расчет допустимой выдергивающей нагрузки по несущей способности       ===============', '', string),
	good_object:add('', '===========================================================================================================', '', string),
	'коэффициенты безопасности по грунту',
	'расчетные значения характеристик грунта',
	'расчетные значения характеристик грунта для грунта засыпки',
	'расчетные значения характеристик грунта для грунта засыпки с учетом коэффициента η',
	'параметры обелиска',
	'коэффициент надежности',
	'удерживающая сила за счет трения обелиска об окружающий грунт',
	'удерживающая сила веса фундамента',
	'удерживающая сила веса грунта в объеме обелиска',
	'допустимая расчетная выдергивающая сила по несущей способности',
	true.

