% vim: set fenc=utf8 syntax=logtalk :
:-	module(check, []).
:-	encoding(utf8).

check_parameter(ИГЭ, Параметр):-
	write('проверка в инженерно-геологическом элементе с обозначением: "'), write(ИГЭ), write('" валидности параметра - '), writeln(Параметр),
	(
		(
			Параметр = 'грунт'(Грунт),
			(
				(
					check:'грунт'(Грунт),
					writeln('INFO: параметр валидный')
				);
				writeln('WARNIGN: параметр не валидный')
			)
		);
		(
			Параметр = 'наименование_степени_влажности'(Наименование_степени_влажности),
			(
				(
					'инженерно_геологические_элементы'(ИГЭ, 'грунт'(Грунт)),
					check:'степень_влажности'('грунт'(Грунт), 'наименование_степени_влажности'(Наименование_степени_влажности), _),
					writeln('INFO: параметр валидный')
				);
				writeln('WARNIGN: параметр не валидный')
			)
		);
		(
			Параметр = 'группа_грунта'(Группа_грунта),
			(
				(
					'инженерно_геологические_элементы'(ИГЭ, 'грунт'(Грунт)),
					check:'показатель_консистенции'('грунт'(Грунт), 'группа_грунта'(Группа_грунта), _),
					writeln('INFO: параметр валидный')
				);
				writeln('WARNIGN: параметр не валидный')
			)
		)
	);
	(
		writeln('WARNING: для данного параметра не существует правила проверки валидности')
	).

check:-
	prolog_load_context(directory, Dir),
	asserta(user:file_search_path(foundation, Dir)),
	use_module(foundation(check)),

	%forall(ИГЭ, (инженерно_геологические_элементы(ИГЭ, Параметр), check_parameter(ИГЭ, Параметр))).
	forall('инженерно_геологические_элементы'(ИГЭ, Параметр), ( !, check_parameter(ИГЭ, Параметр) )).

%:- check, halt.

